- hosts: all
  connection: local
  vars:
    ansible_python_interpreter: '/usr/bin/env python'
    make_target: "non_destructive"
    test_flags: '--skip-tags "test_template,test_filters"'
    credentials_file: ''
    slaves:
      #- distribution: "Ubuntu"
      #  version: "12.04"
      #  image: "ami-2ccc7a44"
      #  ssh_user: "ubuntu"
      #  platform: "ubuntu-12.04-x86_64"
      - distribution: "Ubuntu"
        version: "14.04"
        image: "ami-9a562df2"
        ssh_user: "ubuntu"
        platform: "ubuntu-14.04-x86_64"
      #- distribution: "CentOS"
      #  version: "6.5"
      #  image: "ami-8997afe0"
      #  ssh_user: "root"
      #  platform: "centos-6.5-x86_64"
      #- distribution: "CentOS"
      #  version: "7"
      #  image: "ami-96a818fe"
      #  ssh_user: "centos"
      #  platform: "centos-7-x86_64"
          
  tasks:
    - debug: var=ansible_version
    - include: ec2.yml
      when: groups['dynamic_hosts'] is not defined

- hosts: dynamic_hosts
  sudo: true
  tasks:

    # Wait for cloud-init to finish on ec2 instance (problem with ubuntu)
    # So do the sync first
    - name: Sync ansible repo to ec2 instance
      #copy: src="{{ sync_dir }}" dest="~/ansible"
      synchronize: 
        src: "{{ sync_dir }}"
        dest: "~/ansible"
        rsync_opts:
          - "--exclude=.git"

    - name: Install RH epel
      yum: name="epel-release" state=installed
      sudo: true
      when: ansible_os_family == 'RedHat'

    - name: Install RH ansible dependencies
      yum: name="{{ item }}" state=installed
      sudo: true
      with_items:
        - python-pip
        - python-httplib2
        - rsync
        - subversion
        - mercurial
        - git
        - rubygems
        - unzip
        - openssl
        - make
        - gcc
        - python-devel
        - libselinux-python
      when: ansible_os_family == 'RedHat'

    - apt: update_cache=yes
      when: ansible_os_family == 'Debian'

    - name: Install Debian ansible dependencies
      apt: name="{{ item }}" state=installed update_cache=yes
      sudo: true
      with_items:
        - python-pip
        - python-httplib2
        - rsync
        - subversion
        - mercurial
        - git
        - unzip
      when: ansible_os_family == 'Debian'

    - name: Install ubuntu 12.04 ansible dependencies
      apt: name="{{ item }}" state=installed update_cache=yes
      sudo: true
      with_items:
        - rubygems
        - python-devel
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "12.04"
 
    - name: Install ubuntu 14.04 ansible dependencies
      apt: name="{{ item }}" state=installed update_cache=yes
      sudo: true
      with_items:
        - rubygems-integration
        - python-dev
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == "14.04"

    - name: Install ansible pip deps
      sudo: true
      pip: name="{{ item }}"
      with_items:
        - PyYAML
        - Jinja2
        - paramiko

    - name: Get ansible source dir
      shell: "cd ~ && pwd"
      register: results

    - shell: ". hacking/env-setup && cd test/integration && make {{ make_target }}"
      sudo: true
      environment:
        TEST_FLAGS: "{{ test_flags }}"
        CREDENTIALS_FILE: "{{ credentials_file }}"
      args:
        chdir: "{{ results.stdout }}/ansible"
       
- hosts: all
  connection: local 
  vars:
    ansible_python_interpreter: '/usr/bin/env python'
  tasks:
    - name: Terminate ec2 instances
      ec2:
        state: absent
        region: 'us-east-1'
        instance_ids: "{{ item.instance_ids }}"
      with_items: ec2.results
